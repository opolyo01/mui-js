<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html xmlns:yui="http://yuilibrary.com/rdf/1.0/yui.rdf#">
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
	<title>API: env  Env   (mui Library)</title>

	<link rel="stylesheet" type="text/css" href="assets/reset-fonts-grids-min.css?stamp=1275584796.14" />
	<link rel="stylesheet" type="text/css" href="assets/api.css?stamp=1275584796.14" />

    <script type="text/javascript" src="assets/api-js?stamp=1275584796.14"></script>
    <script type="text/javascript" src="assets/ac-js?stamp=1275584796.14"></script>
	<script type="text/javascript" charset="utf-8">
		window.addEventListener('load', function() {
			document.getElementById('doc3').style.minHeight = window.innerHeight+'px'
		}, false);
	</script>
</head>

<body id="yahoo-com">

<div id="doc3" class="yui-t2">
	
	<div id="hd">
		<div class="primary">
			<h1><a href="" title="mui">mui</a></h1>

			<span class="description">Mobile User Interface <strong>v1.0.0</strong></span>
	
	       		<form onsubmit="return false">
	       			<div id="propertysearch">
					<span class="focus"></span>
					<input autocomplete="off" id="searchinput" placeholder="Search" />
	                		<div id="searchresults">
	                    			&nbsp;
	                		</div>
	            		</div>
	        	</form>
		</div>
		<div class="secondary">
			
			<div class="nav">
				<a href="./index.html" title="mui">mui</a>
	            		<span class="gt"></span> <a href="./module_env.html" title="env">env</a>
	               		 <span class="gt"></span> Env 
	               		
			</div>

			<div class="meta">
		            	<form action="#" name="yui-classopts-form" method="get" id="yui-classopts-form">
		                	<fieldset>
		                    	<legend>Filters</legend>
		                	<span class="classopts"><input type="checkbox" name="show_private" id="show_private" /> <label for="show_private">Show Private</label></span>
		                	<span class="classopts"><input type="checkbox" name="show_protected" id="show_protected" /> <label for="show_protected">Show Protected</label></span>
		                	<span class="classopts"><input type="checkbox" name="show_deprecated" id="show_deprecated" /> <label for="show_deprecated">Show Deprecated</label></span>
		                	</fieldset>
		            	</form>
				<span class="subtitle">1.0.0</span>			
			</div>
	
			<div class="navdec"><b></b><b></b></div>
		</div>
	</div>

	<div id="bd">
		<div id="yui-main">
			<div id="doc-content" class="yui-b">

                    <h2 class="api-class">
                        

                        <code>static</code>
                        
                            Class <b property="yui:name">Env</b>
                        <span class="extends">
                        </span>

                    </h2>
                    <!-- class tree goes here -->
                    
                
  

                    <div class="summary description" property="yui:description">
                        Env class
                    </div>

                    
                    <div rel="yui:properties" resource="#properties">
                        <div class="section field details">
                            <h3 id="properties">Properties</h3>
                            <div class="content">
                                    <div class="" rel="yui:property" resource="#property_template">
                                    <h4><a name="property_template" property="yui:name">template</a>
                                        - <code><span property="yui:type">{string}</span></code>
                                    </h4>
                                    <div class="detail">
                                        <div class="description" property="yui:description">
                                            - private, instance property, the original string that contains markers for data binding
                                        </div>
                                    </div>
     
                                        


                                    <hr />
                                    </div>
                                    <div class="" rel="yui:property" resource="#property_Template::DEFAULT_PATTERN">
                                    <h4><a name="property_Template::DEFAULT_PATTERN" property="yui:name">Template::DEFAULT_PATTERN</a>
                                        - <code>static <span property="yui:type">{RegExp}</span></code>
                                    </h4>
                                    <div class="detail">
                                        <div class="description" property="yui:description">
                                            - public, static property, the RegExp used to match a marker in a template string.  By default, a Template instance
uses this RegExp, and therefore accepts strings that look like "Hello World %{myData}"
It is public, but is intended to be used as a constant (hence the all caps notation).
                                        </div>
                                    </div>
     
                                        


                                    <hr />
                                    </div>
                                    <div class="" rel="yui:property" resource="#property_Template::privMe.buffer">
                                    <h4><a name="property_Template::privMe.buffer" property="yui:name">Template::privMe.buffer</a>
                                        - <code><span property="yui:type">{Array}</span></code>
                                    </h4>
                                    <div class="detail">
                                        <div class="description" property="yui:description">
                                            - private, instance property, an array that contains the substrings of the original template, and empty string place holders
for data.  This gets filled out from the constructor or via calling Template::parse
                                        </div>
                                    </div>
     
                                        


                                    <hr />
                                    </div>
                                    <div class="" rel="yui:property" resource="#property_Template::privMe.pattern">
                                    <h4><a name="property_Template::privMe.pattern" property="yui:name">Template::privMe.pattern</a>
                                        - <code><span property="yui:type">{RegEx}</span></code>
                                    </h4>
                                    <div class="detail">
                                        <div class="description" property="yui:description">
                                            - private, instance property used to find markers in a string for data binding
                                        </div>
                                    </div>
     
                                        


                                    <hr />
                                    </div>
                                    <div class="" rel="yui:property" resource="#property_Template::privMe.props">
                                    <h4><a name="property_Template::privMe.props" property="yui:name">Template::privMe.props</a>
                                        - <code><span property="yui:type">{object}</span></code>
                                    </h4>
                                    <div class="detail">
                                        <div class="description" property="yui:description">
                                            - private, instance property, an object that contains the arrays of indexes into the buffer for where data values should go.
This gets filled out from the constructor or via calling Template::parse. The object is keyed by the var/expressions in the
the template. For example a string for a template like "#{foobar}" means that this object will have props["foobar"] == Array,
and each index of the array will be an index to be filled out in the buffer.
                                        </div>
                                    </div>
     
                                        


                                    <hr />
                                    </div>
                                    <div class="" rel="yui:property" resource="#property_Template::SPRINTF_PATTERN">
                                    <h4><a name="property_Template::SPRINTF_PATTERN" property="yui:name">Template::SPRINTF_PATTERN</a>
                                        - <code>static <span property="yui:type">{RegExp}</span></code>
                                    </h4>
                                    <div class="detail">
                                        <div class="description" property="yui:description">
                                            - public, static property, the RegExp used to match a marker in a template string.  This expression
is used for the typical sprintf format from c. (e.g. "Hello {user}");
                                        </div>
                                    </div>
     
                                        


                                    <hr />
                                    </div>
                            </div>
                        </div>

                    </div>

                    <div rel="yui:methods" resource="#methods">
                        <div class="section method details">
                            <h3 id="methods">Methods</h3>
                            <div class="content">
                                    <div class="" rel="yui:method" resource="#method_[Template].parse">
                                    <h4>
                                        <a name="method_[Template].parse">[Template].parse</a></h4>
                                    <div class="detail" >
                                        <code>
                                        
                                        
                                        
                                        void
                                            <strong property="yui:name">[Template].parse</strong>
                                           (
                                                
                                                        
                                                         template
                                                    
                                                
                                            )
                                        </code>
                                        
                                        <div class="description" property="yui:description">
                                            - public method used to redefine the template string, creating the private buffer and prop instance properties
                                        </div>

                                        <div class="description">

                                                <dl rel="yui:parameters">
                                                    <dt>Parameters:</dt>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">template</span>
                                                        &lt;<span property="yui:type">string</span>&gt;
                                                        </code>
                                                        <span property="yui:description"></span>
                                                        </dd>
                                                </dl>

                                                <dl>
                                                    <dt>Returns:
                                                    <code property="yui:return">
                                                        void
                                                    </code></dt>
                                                    <dd property="yui:returnInfo"></dd>
                                                </dl>


             

                                        </div>

                                    </div>
                                    <hr />
                                    </div>
                                    <div class="" rel="yui:method" resource="#method_[Template].toString, [Template].valueOf">
                                    <h4>
                                        <a name="method_[Template].toString, [Template].valueOf">[Template].toString, [Template].valueOf</a></h4>
                                    <div class="detail" >
                                        <code>
                                        
                                        
                                        
                                        string
                                            <strong property="yui:name">[Template].toString, [Template].valueOf</strong>
                                           (
                                                
                                                        
                                                         (optional)
                                                    
                                                
                                            )
                                        </code>
                                        
                                        <div class="description" property="yui:description">
                                            - public method used to bind data in the string or echo the template itself.
                                        </div>

                                        <div class="description">

                                                <dl rel="yui:parameters">
                                                    <dt>Parameters:</dt>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">(optional)</span>
                                                        &lt;<span property="yui:type">obj</span>&gt;
                                                        </code>
                                                        <span property="yui:description"> if obj present, the properties and values will be replaced in the template
otherwise this will just return the original template string with no data replaced.</span>
                                                        </dd>
                                                </dl>

                                                <dl>
                                                    <dt>Returns:
                                                    <code property="yui:return">
                                                        string
                                                    </code></dt>
                                                    <dd property="yui:returnInfo">with or without, formatted data</dd>
                                                </dl>


             

                                        </div>

                                    </div>
                                    <hr />
                                    </div>
                                    <div class="private" rel="yui:method" resource="#method_defineTemplateBuffer">
                                    <h4>
                                        <a name="method_defineTemplateBuffer">defineTemplateBuffer</a></h4>
                                    <div class="detail" >
                                        <code>
                                         private 
                                         static 
                                        
                                        
                                            <strong property="yui:name">defineTemplateBuffer</strong>
                                           (
                                                
                                                        
                                                         the
                                                    
                                                

                                                
                                                        , 
                                                         A
                                                    
                                                

                                                
                                            )
                                        </code>
                                        
                                        <div class="description" property="yui:description">
                                            - private, static method used to define the buffer array and prop hash caches for a Template
                                        </div>

                                        <div class="description">

                                                <dl rel="yui:parameters">
                                                    <dt>Parameters:</dt>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">the</span>
                                                        &lt;<span property="yui:type">Array</span>&gt;
                                                        </code>
                                                        <span property="yui:description"> buffer array of a Template</span>
                                                        </dd>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">the</span>
                                                        &lt;<span property="yui:type">object</span>&gt;
                                                        </code>
                                                        <span property="yui:description"> props object of a Template</span>
                                                        </dd>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">A</span>
                                                        &lt;<span property="yui:type">object</span>&gt;
                                                        </code>
                                                        <span property="yui:description"> regular expression match result, generated from parseTemplate, that defines what markers exist
for data binding in a template</span>
                                                        </dd>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">A</span>
                                                        &lt;<span property="yui:type">string</span>&gt;
                                                        </code>
                                                        <span property="yui:description"> string, generated from parseTemplate, that prefixes the content of the match param.</span>
                                                        </dd>
                                                </dl>



             

                                        </div>

                                    </div>
                                    <hr />
                                    </div>
                                    <div class="" rel="yui:method" resource="#method_map">
                                    <h4>
                                        <a name="method_map">map</a></h4>
                                    <div class="detail" >
                                        <code>
                                        
                                        
                                        
                                        void
                                            <strong property="yui:name">map</strong>
                                           (
                                                
                                                        
                                                         el
                                                    
                                                
                                                        , 
                                                         data
                                                    
                                                
                                                        , 
                                                         nodeName
                                                    
                                                
                                                        , 
                                                         nodeConfig
                                                    
                                                
                                            )
                                        </code>
                                        
                                        <div class="description" property="yui:description">
                                            
                                        </div>

                                        <div class="description">

                                                <dl rel="yui:parameters">
                                                    <dt>Parameters:</dt>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">el</span>
                                                        &lt;<span property="yui:type">String|HTMLElement</span>&gt;
                                                        </code>
                                                        <span property="yui:description">  The CSS selector or DOM node to map to. The template element must contain an Id.</span>
                                                        </dd>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">data</span>
                                                        &lt;<span property="yui:type">Object</span>&gt;
                                                        </code>
                                                        <span property="yui:description">  The object to map</span>
                                                        </dd>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">nodeName</span>
                                                        &lt;<span property="yui:type">String</span>&gt;
                                                        </code>
                                                        <span property="yui:description">  The tag name of the newly created DOM node</span>
                                                        </dd>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">nodeConfig</span>
                                                        &lt;<span property="yui:type">Object</span>&gt;
                                                        </code>
                                                        <span property="yui:description">  Object literal of node configuration passed to mui.createElement</span>
                                                        </dd>
                                                </dl>

                                                <dl>
                                                    <dt>Returns:
                                                    <code property="yui:return">
                                                        void
                                                    </code></dt>
                                                    <dd property="yui:returnInfo"></dd>
                                                </dl>


             

                                        </div>

                                    </div>
                                    <hr />
                                    </div>
                                    <div class="private" rel="yui:method" resource="#method_parseTemplate">
                                    <h4>
                                        <a name="method_parseTemplate">parseTemplate</a></h4>
                                    <div class="detail" >
                                        <code>
                                         private 
                                         static 
                                        
                                        
                                            <strong property="yui:name">parseTemplate</strong>
                                           (
                                                
                                                        
                                                         the
                                                    
                                                
                                                        , 
                                                         )
                                                    
                                                
                                                        , 
                                                         the
                                                    
                                                

                                                
                                            )
                                        </code>
                                        
                                        <div class="description" property="yui:description">
                                            - private, static method used evaluate the string markers to be for data-binding in a Template
                                        </div>

                                        <div class="description">

                                                <dl rel="yui:parameters">
                                                    <dt>Parameters:</dt>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">the</span>
                                                        &lt;<span property="yui:type">string</span>&gt;
                                                        </code>
                                                        <span property="yui:description"> original template string with markers</span>
                                                        </dd>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">)</span>
                                                        &lt;<span property="yui:type">RegEx} the pattern to match for markers, defaults to Template.DEFAULT_PATTERN (e.g. matches, #{varName</span>&gt;
                                                        </code>
                                                        <span property="yui:description"></span>
                                                        </dd>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">the</span>
                                                        &lt;<span property="yui:type">Array</span>&gt;
                                                        </code>
                                                        <span property="yui:description"> buffer array of a Template</span>
                                                        </dd>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">the</span>
                                                        &lt;<span property="yui:type">object</span>&gt;
                                                        </code>
                                                        <span property="yui:description"> props object of a Template</span>
                                                        </dd>
                                                </dl>



             

                                        </div>

                                    </div>
                                    <hr />
                                    </div>
                                    <div class="" rel="yui:method" resource="#method_template">
                                    <h4>
                                        <a name="method_template">template</a></h4>
                                    <div class="detail" >
                                        <code>
                                        
                                        
                                        
                                        void
                                            <strong property="yui:name">template</strong>
                                           (
                                            )
                                        </code>
                                        
                                        <div class="description" property="yui:description">
                                            Template is a mechanism for binding data into a string
Example:
var someHTML  = "<div id='#{myID}'>#{myData}</div>";
var data      = { myID:"myBox", myData:"Hello World" };
var output    = mui.map( data, {someHTML|HTMLElement} );
//output ==> "<div id='myBox'>Hello World</div>";
Notes:
Speed, speed, and more speed:
---------------------------
Obviously the goal of any piece of code is to be as efficient as possible.
Often times, you will see code that uses JavaScript's raw [string].replace
methods, to do the same thing as above.
However often times your "template string" is usuallay HTML or something.
This same string is re-used over and over again, and typically you'll see
engineers just make the replace calls. ..
Having to continually run regular expressions on the string is slow and
some what point-less if the original "template string" doesn't really change,
all that's changing is the data. . .
So the goal was to create a more efficient, single way too manage a "template string",
that is faster than other implementations like it and faster than continually
calling raw replace methods. ..
What this class does under the hood, is split the string up into its pieces,
using various Regular Expresion matching. .. similar to what a replace would do.
It then stores these pieces privately in a "buffer". At the same time it also
stores the property names/expressions found in the "template string", and at
what location(s) they should appear in the buffer.
This only needs to be done 1 time per template string. . .(implementations in other
toolkits such as Prototype 1.6.03, would do multiple matches/replacements every time
the data is passed in).
Then, when you bind data by calling [template].parse, we simply loop through
the buffer filling in slots. . .
Similar to:
---------------------------
There is a similar function in PHP - see toMessage()
"I %how_much% like %dessert%!".toMessage( "how_much=really", "dessert=Ice Cream" );
result  =>  I really like Ice Cream!
For this code call:
var data    = {how_much:"really", dessert:"Ice Cream"};
var output  = mui.supplant("I %how_much% like %dessert%!", data);
                                        </div>

                                        <div class="description">


                                                <dl>
                                                    <dt>Returns:
                                                    <code property="yui:return">
                                                        void
                                                    </code></dt>
                                                    <dd property="yui:returnInfo"></dd>
                                                </dl>


             

                                        </div>

                                    </div>
                                    <hr />
                                    </div>
                                    <div class="" rel="yui:method" resource="#method_Template (constructor)">
                                    <h4>
                                        <a name="method_Template (constructor)">Template (constructor)</a></h4>
                                    <div class="detail" >
                                        <code>
                                        
                                        
                                        
                                        object
                                            <strong property="yui:name">Template (constructor)</strong>
                                           (
                                                
                                                        
                                                         the
                                                    
                                                
                                                        , 
                                                         )
                                                    
                                                
                                            )
                                        </code>
                                        
                                        <div class="description" property="yui:description">
                                            - private, static method used evaluate the string markers to be for data-binding in a Template
                                        </div>

                                        <div class="description">

                                                <dl rel="yui:parameters">
                                                    <dt>Parameters:</dt>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">the</span>
                                                        &lt;<span property="yui:type">string</span>&gt;
                                                        </code>
                                                        <span property="yui:description"> original template string with markers</span>
                                                        </dd>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">)</span>
                                                        &lt;<span property="yui:type">RegEx} the pattern to match for markers, defaults to Template.DEFAULT_PATTERN (e.g. matches, #{varName</span>&gt;
                                                        </code>
                                                        <span property="yui:description"></span>
                                                        </dd>
                                                </dl>

                                                <dl>
                                                    <dt>Returns:
                                                    <code property="yui:return">
                                                        object
                                                    </code></dt>
                                                    <dd property="yui:returnInfo">Template instance</dd>
                                                </dl>


             

                                        </div>

                                    </div>
                                    <hr />
                                    </div>
                            </div>
                        </div>

                    </div>

                    <div rel="yui:events" resource="#events">


                    </div>

                    <div rel="yui:attributes" resource="#configattributes">

                    </div>

			</div>
		</div>
		<div class="yui-b">
            <div class="nav">

                    <div id="moduleList" class="module">
                        <h4>Modules</h4>
                        <ul class="content">
                                <li class=""><a href="module_actionsheet.html" title="actionsheet">actionsheet</a></li>
                                <li class=""><a href="module_ajax.html" title="ajax">ajax</a></li>
                                <li class=""><a href="module_anim.html" title="anim">anim</a></li>
                                <li class=""><a href="module_button.html" title="button">button</a></li>
                                <li class=""><a href="module_datasource.html" title="datasource">datasource</a></li>
                                <li class=""><a href="module_dom.html" title="dom">dom</a></li>
                                <li class="selected"><a href="module_env.html" title="env">env</a></li>
                                <li class=""><a href="module_event.html" title="event">event</a></li>
                                <li class=""><a href="module_fx.html" title="fx">fx</a></li>
                                <li class=""><a href="module_geo.html" title="geo">geo</a></li>
                                <li class=""><a href="module_navigator.html" title="navigator">navigator</a></li>
                                <li class=""><a href="module_oop.html" title="oop">oop</a></li>
                                <li class=""><a href="module_pager.html" title="pager">pager</a></li>
                                <li class=""><a href="module_scroll-view.html" title="scroll-view">scroll-view</a></li>
                                <li class=""><a href="module_search-box.html" title="search-box">search-box</a></li>
                                <li class=""><a href="module_storage.html" title="storage">storage</a></li>
                                <li class=""><a href="module_tab-view.html" title="tab-view">tab-view</a></li>
                                <li class=""><a href="module_test.html" title="test">test</a></li>
                                <li class=""><a href="module_transition.html" title="transition">transition</a></li>
                                <li class=""><a href="module_util.html" title="util">util</a></li>
                                <li class=""><a href="module_web-app.html" title="web-app">web-app</a></li>
                        </ul>
                    </div>

                    <div id="classList" class="module">
                        <h4>Classes</h4>
                        <ul class="content">
                                <li class="selected"><a href="Env.html" title="Env">Env</a></li>
                                <li class="selected"><a href="Env.html" title="Env">Env</a></li>
                        </ul>
                    </div>

                    <div id="fileList" class="module">
                        <h4>Files</h4>
                        <ul class="content">        
                                <li class=""><a href="mui.js.html" title="mui.js">mui.js</a></li>
                                <li class=""><a href="test.js.html" title="test.js">test.js</a></li>
                        </ul>
                    </div>

                    <div id="propertyList" class="module">
                        <h4>Properties</h4>
                        <ul class="content">        
                                <li class=""><a href="#property_template" title="template">template</a></li>
                                <li class=""><a href="#property_Template::DEFAULT_PATTERN" title="Template::DEFAULT_PATTERN">Template::DEFAULT_PATTERN</a></li>
                                <li class=""><a href="#property_Template::privMe.buffer" title="Template::privMe.buffer">Template::privMe.buffer</a></li>
                                <li class=""><a href="#property_Template::privMe.pattern" title="Template::privMe.pattern">Template::privMe.pattern</a></li>
                                <li class=""><a href="#property_Template::privMe.props" title="Template::privMe.props">Template::privMe.props</a></li>
                                <li class=""><a href="#property_Template::SPRINTF_PATTERN" title="Template::SPRINTF_PATTERN">Template::SPRINTF_PATTERN</a></li>
                        </ul>
                    </div>

                    <div id="methodsList" class="module">
                        <h4>Methods</h4>
                        <ul class="content">        
                                <li class=""><a href="#method_[Template].parse" title="[Template].parse">[Template].parse</a></li>
                                <li class=""><a href="#method_[Template].toString, [Template].valueOf" title="[Template].toString, [Template].valueOf">[Template].toString, [Template].valueOf</a></li>
                                <li class="private"><a href="#method_defineTemplateBuffer" title="defineTemplateBuffer">defineTemplateBuffer</a></li>
                                <li class=""><a href="#method_map" title="map">map</a></li>
                                <li class="private"><a href="#method_parseTemplate" title="parseTemplate">parseTemplate</a></li>
                                <li class=""><a href="#method_template" title="template">template</a></li>
                                <li class=""><a href="#method_Template (constructor)" title="Template (constructor)">Template (constructor)</a></li>
                        </ul>
                    </div>



            </div>
		</div>
	</div>
	<div id="ft">
		<div>
        	Copyright &copy; 2010 Yahoo! Inc. All rights reserved.
		</div>
	</div>
</div>
<script type="text/javascript">
    ALL_YUI_PROPS = [{"url": "Env.html#method_[Template].parse", "access": "", "host": "Env", "type": "method", "name": "[Template].parse"}, {"url": "Env.html#method_[Template].parse", "access": "", "host": "Env", "type": "method", "name": "[Template].parse"}, {"url": "Env.html#method_[Template].toString, [Template].valueOf", "access": "", "host": "Env", "type": "method", "name": "[Template].toString, [Template].valueOf"}, {"url": "Env.html#method_[Template].toString, [Template].valueOf", "access": "", "host": "Env", "type": "method", "name": "[Template].toString, [Template].valueOf"}, {"url": "Env.html#method_defineTemplateBuffer", "access": "private", "host": "Env", "type": "method", "name": "defineTemplateBuffer"}, {"url": "Env.html#method_defineTemplateBuffer", "access": "private", "host": "Env", "type": "method", "name": "defineTemplateBuffer"}, {"url": "Env.html#method_map", "access": "", "host": "Env", "type": "method", "name": "map"}, {"url": "Env.html#method_map", "access": "", "host": "Env", "type": "method", "name": "map"}, {"url": "Env.html#method_parseTemplate", "access": "private", "host": "Env", "type": "method", "name": "parseTemplate"}, {"url": "Env.html#method_parseTemplate", "access": "private", "host": "Env", "type": "method", "name": "parseTemplate"}, {"url": "Env.html#property_template", "access": "", "host": "Env", "type": "property", "name": "template"}, {"url": "Env.html#method_template", "access": "", "host": "Env", "type": "method", "name": "template"}, {"url": "Env.html#property_template", "access": "", "host": "Env", "type": "property", "name": "template"}, {"url": "Env.html#method_template", "access": "", "host": "Env", "type": "method", "name": "template"}, {"url": "Env.html#method_Template (constructor)", "access": "", "host": "Env", "type": "method", "name": "Template (constructor)"}, {"url": "Env.html#method_Template (constructor)", "access": "", "host": "Env", "type": "method", "name": "Template (constructor)"}, {"url": "Env.html#property_Template::DEFAULT_PATTERN", "access": "", "host": "Env", "type": "property", "name": "Template::DEFAULT_PATTERN"}, {"url": "Env.html#property_Template::DEFAULT_PATTERN", "access": "", "host": "Env", "type": "property", "name": "Template::DEFAULT_PATTERN"}, {"url": "Env.html#property_Template::privMe.buffer", "access": "", "host": "Env", "type": "property", "name": "Template::privMe.buffer"}, {"url": "Env.html#property_Template::privMe.buffer", "access": "", "host": "Env", "type": "property", "name": "Template::privMe.buffer"}, {"url": "Env.html#property_Template::privMe.pattern", "access": "", "host": "Env", "type": "property", "name": "Template::privMe.pattern"}, {"url": "Env.html#property_Template::privMe.pattern", "access": "", "host": "Env", "type": "property", "name": "Template::privMe.pattern"}, {"url": "Env.html#property_Template::privMe.props", "access": "", "host": "Env", "type": "property", "name": "Template::privMe.props"}, {"url": "Env.html#property_Template::privMe.props", "access": "", "host": "Env", "type": "property", "name": "Template::privMe.props"}, {"url": "Env.html#property_Template::SPRINTF_PATTERN", "access": "", "host": "Env", "type": "property", "name": "Template::SPRINTF_PATTERN"}, {"url": "Env.html#property_Template::SPRINTF_PATTERN", "access": "", "host": "Env", "type": "property", "name": "Template::SPRINTF_PATTERN"}];
</script>
</body>
</html>
