<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html xmlns:yui="http://yuilibrary.com/rdf/1.0/yui.rdf#">
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
	<title>API: test  Test.Mock   (mui Library)</title>

	<link rel="stylesheet" type="text/css" href="assets/reset-fonts-grids-min.css?stamp=1275584795.78" />
	<link rel="stylesheet" type="text/css" href="assets/api.css?stamp=1275584795.78" />

    <script type="text/javascript" src="assets/api-js?stamp=1275584795.78"></script>
    <script type="text/javascript" src="assets/ac-js?stamp=1275584795.78"></script>
	<script type="text/javascript" charset="utf-8">
		window.addEventListener('load', function() {
			document.getElementById('doc3').style.minHeight = window.innerHeight+'px'
		}, false);
	</script>
</head>

<body id="yahoo-com">

<div id="doc3" class="yui-t2">
	
	<div id="hd">
		<div class="primary">
			<h1><a href="" title="mui">mui</a></h1>

			<span class="description">Mobile User Interface <strong>v1.0.0</strong></span>
	
	       		<form onsubmit="return false">
	       			<div id="propertysearch">
					<span class="focus"></span>
					<input autocomplete="off" id="searchinput" placeholder="Search" />
	                		<div id="searchresults">
	                    			&nbsp;
	                		</div>
	            		</div>
	        	</form>
		</div>
		<div class="secondary">
			
			<div class="nav">
				<a href="./index.html" title="mui">mui</a>
	            		<span class="gt"></span> <a href="./module_test.html" title="test">test</a>
	               		 <span class="gt"></span> Test.Mock 
	               		
			</div>

			<div class="meta">
		            	<form action="#" name="yui-classopts-form" method="get" id="yui-classopts-form">
		                	<fieldset>
		                    	<legend>Filters</legend>
		                	<span class="classopts"><input type="checkbox" name="show_private" id="show_private" /> <label for="show_private">Show Private</label></span>
		                	<span class="classopts"><input type="checkbox" name="show_protected" id="show_protected" /> <label for="show_protected">Show Protected</label></span>
		                	<span class="classopts"><input type="checkbox" name="show_deprecated" id="show_deprecated" /> <label for="show_deprecated">Show Deprecated</label></span>
		                	</fieldset>
		            	</form>
				<span class="subtitle">1.0.0</span>			
			</div>
	
			<div class="navdec"><b></b><b></b></div>
		</div>
	</div>

	<div id="bd">
		<div id="yui-main">
			<div id="doc-content" class="yui-b">

                    <h2 class="api-class">
                        

                        
                        
                            Class <b property="yui:name">Test.Mock</b>
                        <span class="extends">
                        </span>

                    </h2>
                    <!-- class tree goes here -->
                    
                
  

                    <div class="summary description" property="yui:description">
                        Creates a new mock object.
                    </div>

                        <div class="section constructor details" rel="yui:constructor" resource="#constructor">
                        <h3 id="constructor">Constructor</h3>
                        <div class="content">
                            <div class="detail">
                                <strong property="yui:name">Test.Mock</strong>
                                <code>
                                    (
  
                                        
                                                
                                                template
                                    )
                                </code>
                                <div class="description">
                                        <dl rel="yui:parameters">
                                            <dt>Parameters:</dt>
                                                <dd rel="yui:parameter">
                                                    <code><span property="yui:name">template</span>
                                                    &lt;<span property="yui:type">Object</span>&gt;
                                                    </code>
                                                    <span property="yui:description"> (Optional) An object whose methods
should be stubbed out on the mock object.</span>
                                                </dd>
                                        </dl>
                                    
                                    
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div rel="yui:properties" resource="#properties">
                        <div class="section field details">
                            <h3 id="properties">Properties</h3>
                            <div class="content">
                                    <div class="" rel="yui:property" resource="#property_domTests">
                                    <h4><a name="property_domTests" property="yui:name">domTests</a>
                                        - <code><span property="yui:type">object</span></code>
                                    </h4>
                                    <div class="detail">
                                        <div class="description" property="yui:description">
                                            Test DOM class methods
                                        </div>
                                    </div>
     
                                        


                                    <hr />
                                    </div>
                                    <div class="" rel="yui:property" resource="#property_oopTests">
                                    <h4><a name="property_oopTests" property="yui:name">oopTests</a>
                                        - <code><span property="yui:type">object</span></code>
                                    </h4>
                                    <div class="detail">
                                        <div class="description" property="yui:description">
                                            Test OOP class methods
                                        </div>
                                    </div>
     
                                        


                                    <hr />
                                    </div>
                                    <div class="" rel="yui:property" resource="#property_utilTests">
                                    <h4><a name="property_utilTests" property="yui:name">utilTests</a>
                                        - <code><span property="yui:type">object</span></code>
                                    </h4>
                                    <div class="detail">
                                        <div class="description" property="yui:description">
                                            Test Util class methods
                                        </div>
                                    </div>
     
                                        


                                    <hr />
                                    </div>
                            </div>
                        </div>

                    </div>

                    <div rel="yui:methods" resource="#methods">
                        <div class="section method details">
                            <h3 id="methods">Methods</h3>
                            <div class="content">
                                    <div class="" rel="yui:method" resource="#method_expect">
                                    <h4>
                                        <a name="method_expect">expect</a></h4>
                                    <div class="detail" >
                                        <code>
                                        
                                         static 
                                        
                                        void
                                            <strong property="yui:name">expect</strong>
                                           (
                                                
                                                        
                                                         mock
                                                    
                                                
                                                        , 
                                                         expectation
                                                    
                                                
                                            )
                                        </code>
                                        
                                        <div class="description" property="yui:description">
                                            Assigns an expectation to a mock object. This is used to create
methods and properties on the mock object that are monitored for
calls and changes, respectively.
                                        </div>

                                        <div class="description">

                                                <dl rel="yui:parameters">
                                                    <dt>Parameters:</dt>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">mock</span>
                                                        &lt;<span property="yui:type">Object</span>&gt;
                                                        </code>
                                                        <span property="yui:description"> The object to add the expectation to.</span>
                                                        </dd>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">expectation</span>
                                                        &lt;<span property="yui:type">Object</span>&gt;
                                                        </code>
                                                        <span property="yui:description"> An object defining the expectation. For
a method, the keys "method" and "args" are required with
an optional "returns" key available. For properties, the keys
"property" and "value" are required.</span>
                                                        </dd>
                                                </dl>

                                                <dl>
                                                    <dt>Returns:
                                                    <code property="yui:return">
                                                        void
                                                    </code></dt>
                                                    <dd property="yui:returnInfo"></dd>
                                                </dl>


             

                                        </div>

                                    </div>
                                    <hr />
                                    </div>
                                    <div class="" rel="yui:method" resource="#method_logInclude">
                                    <h4>
                                        <a name="method_logInclude">logInclude</a></h4>
                                    <div class="detail" >
                                        <code>
                                        
                                        
                                        
                                        void
                                            <strong property="yui:name">logInclude</strong>
                                           (
                                            )
                                        </code>
                                        
                                        <div class="description" property="yui:description">
                                            mui/tests/tests.js
Tests the core of the mui library
TODO: test mui.bind
                                        </div>

                                        <div class="description">


                                                <dl>
                                                    <dt>Returns:
                                                    <code property="yui:return">
                                                        void
                                                    </code></dt>
                                                    <dd property="yui:returnInfo"></dd>
                                                </dl>


             

                                        </div>

                                    </div>
                                    <hr />
                                    </div>
                                    <div class="" rel="yui:method" resource="#method_verify">
                                    <h4>
                                        <a name="method_verify">verify</a></h4>
                                    <div class="detail" >
                                        <code>
                                        
                                         static 
                                        
                                        void
                                            <strong property="yui:name">verify</strong>
                                           (
                                                
                                                        
                                                         mock
                                                    
                                                
                                            )
                                        </code>
                                        
                                        <div class="description" property="yui:description">
                                            Verifies that all expectations of a mock object have been met and
throws an assertion error if not.
                                        </div>

                                        <div class="description">

                                                <dl rel="yui:parameters">
                                                    <dt>Parameters:</dt>
                                                        <dd rel="yui:parameter">
                                                        <code><span property="yui:name">mock</span>
                                                        &lt;<span property="yui:type">Object</span>&gt;
                                                        </code>
                                                        <span property="yui:description"> The object to verify..</span>
                                                        </dd>
                                                </dl>

                                                <dl>
                                                    <dt>Returns:
                                                    <code property="yui:return">
                                                        void
                                                    </code></dt>
                                                    <dd property="yui:returnInfo"></dd>
                                                </dl>


             

                                        </div>

                                    </div>
                                    <hr />
                                    </div>
                            </div>
                        </div>

                    </div>

                    <div rel="yui:events" resource="#events">


                    </div>

                    <div rel="yui:attributes" resource="#configattributes">

                    </div>

			</div>
		</div>
		<div class="yui-b">
            <div class="nav">

                    <div id="moduleList" class="module">
                        <h4>Modules</h4>
                        <ul class="content">
                                <li class=""><a href="module_actionsheet.html" title="actionsheet">actionsheet</a></li>
                                <li class=""><a href="module_ajax.html" title="ajax">ajax</a></li>
                                <li class=""><a href="module_anim.html" title="anim">anim</a></li>
                                <li class=""><a href="module_button.html" title="button">button</a></li>
                                <li class=""><a href="module_datasource.html" title="datasource">datasource</a></li>
                                <li class=""><a href="module_dom.html" title="dom">dom</a></li>
                                <li class=""><a href="module_env.html" title="env">env</a></li>
                                <li class=""><a href="module_event.html" title="event">event</a></li>
                                <li class=""><a href="module_fx.html" title="fx">fx</a></li>
                                <li class=""><a href="module_geo.html" title="geo">geo</a></li>
                                <li class=""><a href="module_navigator.html" title="navigator">navigator</a></li>
                                <li class=""><a href="module_oop.html" title="oop">oop</a></li>
                                <li class=""><a href="module_pager.html" title="pager">pager</a></li>
                                <li class=""><a href="module_scroll-view.html" title="scroll-view">scroll-view</a></li>
                                <li class=""><a href="module_search-box.html" title="search-box">search-box</a></li>
                                <li class=""><a href="module_storage.html" title="storage">storage</a></li>
                                <li class=""><a href="module_tab-view.html" title="tab-view">tab-view</a></li>
                                <li class="selected"><a href="module_test.html" title="test">test</a></li>
                                <li class=""><a href="module_transition.html" title="transition">transition</a></li>
                                <li class=""><a href="module_util.html" title="util">util</a></li>
                                <li class=""><a href="module_web-app.html" title="web-app">web-app</a></li>
                        </ul>
                    </div>

                    <div id="classList" class="module">
                        <h4>Classes</h4>
                        <ul class="content">
                                <li class=""><a href="Assert.ArrayAssert.html" title="Assert.ArrayAssert">Assert.ArrayAssert</a></li>
                                <li class=""><a href="Assert.ComparisonFailure.html" title="Assert.ComparisonFailure">Assert.ComparisonFailure</a></li>
                                <li class=""><a href="Assert.DateAssert.html" title="Assert.DateAssert">Assert.DateAssert</a></li>
                                <li class=""><a href="Assert.Error.html" title="Assert.Error">Assert.Error</a></li>
                                <li class=""><a href="Assert.ObjectAssert.html" title="Assert.ObjectAssert">Assert.ObjectAssert</a></li>
                                <li class=""><a href="Assert.ShouldError.html" title="Assert.ShouldError">Assert.ShouldError</a></li>
                                <li class=""><a href="Assert.ShouldFail.html" title="Assert.ShouldFail">Assert.ShouldFail</a></li>
                                <li class=""><a href="Assert.UnexpectedError.html" title="Assert.UnexpectedError">Assert.UnexpectedError</a></li>
                                <li class=""><a href="Assert.UnexpectedValue.html" title="Assert.UnexpectedValue">Assert.UnexpectedValue</a></li>
                                <li class=""><a href="Test.Assert.html" title="Test.Assert">Test.Assert</a></li>
                                <li class=""><a href="Test.Case.html" title="Test.Case">Test.Case</a></li>
                                <li class="selected"><a href="Test.Mock.html" title="Test.Mock">Test.Mock</a></li>
                                <li class=""><a href="Test.Reporter.html" title="Test.Reporter">Test.Reporter</a></li>
                                <li class=""><a href="Test.Runner.html" title="Test.Runner">Test.Runner</a></li>
                                <li class=""><a href="Test.Suite.html" title="Test.Suite">Test.Suite</a></li>
                                <li class=""><a href="Test.TestNode.html" title="Test.TestNode">Test.TestNode</a></li>
                                <li class=""><a href="Test.Wait.html" title="Test.Wait">Test.Wait</a></li>
                        </ul>
                    </div>

                    <div id="fileList" class="module">
                        <h4>Files</h4>
                        <ul class="content">        
                                <li class=""><a href="tests.js.html" title="tests.js">tests.js</a></li>
                        </ul>
                    </div>

                    <div id="propertyList" class="module">
                        <h4>Properties</h4>
                        <ul class="content">        
                                <li class=""><a href="#property_domTests" title="domTests">domTests</a></li>
                                <li class=""><a href="#property_oopTests" title="oopTests">oopTests</a></li>
                                <li class=""><a href="#property_utilTests" title="utilTests">utilTests</a></li>
                        </ul>
                    </div>

                    <div id="methodsList" class="module">
                        <h4>Methods</h4>
                        <ul class="content">        
                                <li class=""><a href="#method_expect" title="expect">expect</a></li>
                                <li class=""><a href="#method_logInclude" title="logInclude">logInclude</a></li>
                                <li class=""><a href="#method_verify" title="verify">verify</a></li>
                        </ul>
                    </div>



            </div>
		</div>
	</div>
	<div id="ft">
		<div>
        	Copyright &copy; 2010 Yahoo! Inc. All rights reserved.
		</div>
	</div>
</div>
<script type="text/javascript">
    ALL_YUI_PROPS = [{"url": "Assert.ComparisonFailure.html#property_actual", "access": "", "host": "Assert.ComparisonFailure", "type": "property", "name": "actual"}, {"url": "Test.Suite.html#method_add", "access": "", "host": "Test.Suite", "type": "method", "name": "add"}, {"url": "Test.Runner.html#method_add", "access": "", "host": "Test.Runner", "type": "method", "name": "add"}, {"url": "Test.Reporter.html#method_addField", "access": "", "host": "Test.Reporter", "type": "method", "name": "addField"}, {"url": "Test.Runner.html#method__addTestCaseToTestTree", "access": "private", "host": "Test.Runner", "type": "method", "name": "_addTestCaseToTestTree"}, {"url": "Test.Runner.html#method__addTestSuiteToTestTree", "access": "private", "host": "Test.Runner", "type": "method", "name": "_addTestSuiteToTestTree"}, {"url": "Test.TestNode.html#method_appendChild", "access": "", "host": "Test.TestNode", "type": "method", "name": "appendChild"}, {"url": "Test.Assert.html#method_areEqual", "access": "", "host": "Test.Assert", "type": "method", "name": "areEqual"}, {"url": "Test.Assert.html#method_areNotEqual", "access": "", "host": "Test.Assert", "type": "method", "name": "areNotEqual"}, {"url": "Test.Assert.html#method_areNotSame", "access": "", "host": "Test.Assert", "type": "method", "name": "areNotSame"}, {"url": "Test.Assert.html#method_areSame", "access": "", "host": "Test.Assert", "type": "method", "name": "areSame"}, {"url": "Test.Assert.html#property__asserts", "access": "private", "host": "Test.Assert", "type": "property", "name": "_asserts"}, {"url": "Test.Runner.html#event_begin", "access": "", "host": "Test.Runner", "type": "event", "name": "begin"}, {"url": "Test.Runner.html#method__buildTestTree", "access": "private", "host": "Test.Runner", "type": "method", "name": "_buildTestTree"}, {"url": "Assert.UnexpectedError.html#property_cause", "access": "", "host": "Assert.UnexpectedError", "type": "property", "name": "cause"}, {"url": "Test.Runner.html#method_clear", "access": "", "host": "Test.Runner", "type": "method", "name": "clear"}, {"url": "Test.Runner.html#event_complete", "access": "", "host": "Test.Runner", "type": "event", "name": "complete"}, {"url": "Assert.ArrayAssert.html#method_contains", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "contains"}, {"url": "Assert.ArrayAssert.html#method_containsItems", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "containsItems"}, {"url": "Assert.ArrayAssert.html#method_containsMatch", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "containsMatch"}, {"url": "Test.Runner.html#property__cur", "access": "private", "host": "Test.Runner", "type": "property", "name": "_cur"}, {"url": "Assert.DateAssert.html#method_datesAreEqual", "access": "", "host": "Assert.DateAssert", "type": "method", "name": "datesAreEqual"}, {"url": "Test.Wait.html#property_delay", "access": "", "host": "Test.Wait", "type": "property", "name": "delay"}, {"url": "Test.Reporter.html#method_destroy", "access": "", "host": "Test.Reporter", "type": "method", "name": "destroy"}, {"url": "Test.Runner.html#method_disableLogging", "access": "", "host": "Test.Runner", "type": "method", "name": "disableLogging"}, {"url": "Assert.ArrayAssert.html#method_doesNotContain", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "doesNotContain"}, {"url": "Assert.ArrayAssert.html#method_doesNotContainItems", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "doesNotContainItems"}, {"url": "Assert.ArrayAssert.html#method_doesNotContainMatch", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "doesNotContainMatch"}, {"url": "Test.Mock.html#property_domTests", "access": "", "host": "Test.Mock", "type": "property", "name": "domTests"}, {"url": "Test.Runner.html#method_enableLogging", "access": "", "host": "Test.Runner", "type": "method", "name": "enableLogging"}, {"url": "Test.Mock.html#method_expect", "access": "", "host": "Test.Mock", "type": "method", "name": "expect"}, {"url": "Assert.ComparisonFailure.html#property_expected", "access": "", "host": "Assert.ComparisonFailure", "type": "property", "name": "expected"}, {"url": "Test.Runner.html#event_fail", "access": "", "host": "Test.Runner", "type": "event", "name": "fail"}, {"url": "Test.Assert.html#method_fail", "access": "", "host": "Test.Assert", "type": "method", "name": "fail"}, {"url": "Test.Reporter.html#property__fields", "access": "private", "host": "Test.Reporter", "type": "property", "name": "_fields"}, {"url": "Test.TestNode.html#property_firstChild", "access": "", "host": "Test.TestNode", "type": "property", "name": "firstChild"}, {"url": "Test.Reporter.html#property__form", "access": "private", "host": "Test.Reporter", "type": "property", "name": "_form"}, {"url": "Test.Reporter.html#property_format", "access": "", "host": "Test.Reporter", "type": "property", "name": "format"}, {"url": "Test.Assert.html#method__formatMessage", "access": "protected", "host": "Test.Assert", "type": "method", "name": "_formatMessage"}, {"url": "Test.Assert.html#method__getCount", "access": "protected", "host": "Test.Assert", "type": "method", "name": "_getCount"}, {"url": "Test.Runner.html#method_getCoverage", "access": "", "host": "Test.Runner", "type": "method", "name": "getCoverage"}, {"url": "Assert.Error.html#method_getMessage", "access": "", "host": "Assert.Error", "type": "method", "name": "getMessage"}, {"url": "Assert.UnexpectedValue.html#method_getMessage", "access": "", "host": "Assert.UnexpectedValue", "type": "method", "name": "getMessage"}, {"url": "Test.Runner.html#method_getName", "access": "", "host": "Test.Runner", "type": "method", "name": "getName"}, {"url": "Test.Runner.html#method_getResults", "access": "", "host": "Test.Runner", "type": "method", "name": "getResults"}, {"url": "Test.Runner.html#method__handleError", "access": "private", "host": "Test.Runner", "type": "method", "name": "_handleError"}, {"url": "Test.Runner.html#method__handleTestObjectComplete", "access": "private", "host": "Test.Runner", "type": "method", "name": "_handleTestObjectComplete"}, {"url": "Assert.ObjectAssert.html#method_hasKey", "access": "", "host": "Assert.ObjectAssert", "type": "method", "name": "hasKey"}, {"url": "Assert.ObjectAssert.html#method_hasKeys", "access": "", "host": "Assert.ObjectAssert", "type": "method", "name": "hasKeys"}, {"url": "Test.Reporter.html#property__iframe", "access": "private", "host": "Test.Reporter", "type": "property", "name": "_iframe"}, {"url": "Test.Runner.html#event_ignore", "access": "", "host": "Test.Runner", "type": "event", "name": "ignore"}, {"url": "Test.Assert.html#method__increment", "access": "protected", "host": "Test.Assert", "type": "method", "name": "_increment"}, {"url": "Assert.ArrayAssert.html#method_indexOf", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "indexOf"}, {"url": "Test.Assert.html#method_isArray", "access": "", "host": "Test.Assert", "type": "method", "name": "isArray"}, {"url": "Test.Assert.html#method_isBoolean", "access": "", "host": "Test.Assert", "type": "method", "name": "isBoolean"}, {"url": "Assert.ArrayAssert.html#method_isEmpty", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "isEmpty"}, {"url": "Test.Assert.html#method_isFalse", "access": "", "host": "Test.Assert", "type": "method", "name": "isFalse"}, {"url": "Test.Assert.html#method_isFunction", "access": "", "host": "Test.Assert", "type": "method", "name": "isFunction"}, {"url": "Test.Assert.html#method_isInstanceOf", "access": "", "host": "Test.Assert", "type": "method", "name": "isInstanceOf"}, {"url": "Test.Assert.html#method_isNaN", "access": "", "host": "Test.Assert", "type": "method", "name": "isNaN"}, {"url": "Assert.ArrayAssert.html#method_isNotEmpty", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "isNotEmpty"}, {"url": "Test.Assert.html#method_isNotNaN", "access": "", "host": "Test.Assert", "type": "method", "name": "isNotNaN"}, {"url": "Test.Assert.html#method_isNotNull", "access": "", "host": "Test.Assert", "type": "method", "name": "isNotNull"}, {"url": "Test.Assert.html#method_isNotUndefined", "access": "", "host": "Test.Assert", "type": "method", "name": "isNotUndefined"}, {"url": "Test.Assert.html#method_isNull", "access": "", "host": "Test.Assert", "type": "method", "name": "isNull"}, {"url": "Test.Assert.html#method_isNumber", "access": "", "host": "Test.Assert", "type": "method", "name": "isNumber"}, {"url": "Test.Assert.html#method_isObject", "access": "", "host": "Test.Assert", "type": "method", "name": "isObject"}, {"url": "Test.Runner.html#method_isRunning", "access": "", "host": "Test.Runner", "type": "method", "name": "isRunning"}, {"url": "Test.Assert.html#method_isString", "access": "", "host": "Test.Assert", "type": "method", "name": "isString"}, {"url": "Test.Assert.html#method_isTrue", "access": "", "host": "Test.Assert", "type": "method", "name": "isTrue"}, {"url": "Test.Assert.html#method_isTypeOf", "access": "", "host": "Test.Assert", "type": "method", "name": "isTypeOf"}, {"url": "Test.Assert.html#method_isUndefined", "access": "", "host": "Test.Assert", "type": "method", "name": "isUndefined"}, {"url": "Test.Runner.html#method_isWaiting", "access": "", "host": "Test.Runner", "type": "method", "name": "isWaiting"}, {"url": "Test.Suite.html#property_items", "access": "private", "host": "Test.Suite", "type": "property", "name": "items"}, {"url": "Assert.ArrayAssert.html#method_itemsAreEqual", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "itemsAreEqual"}, {"url": "Assert.ArrayAssert.html#method_itemsAreEquivalent", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "itemsAreEquivalent"}, {"url": "Assert.ArrayAssert.html#method_itemsAreSame", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "itemsAreSame"}, {"url": "Assert.DateAssert.html#method_JSON", "access": "", "host": "Assert.DateAssert", "type": "method", "name": "JSON"}, {"url": "Assert.DateAssert.html#method_JUnitXML", "access": "", "host": "Assert.DateAssert", "type": "method", "name": "JUnitXML"}, {"url": "Test.TestNode.html#property_lastChild", "access": "", "host": "Test.TestNode", "type": "property", "name": "lastChild"}, {"url": "Assert.ArrayAssert.html#method_lastIndexOf", "access": "", "host": "Assert.ArrayAssert", "type": "method", "name": "lastIndexOf"}, {"url": "Test.Runner.html#property__lastResults", "access": "private", "host": "Test.Runner", "type": "property", "name": "_lastResults"}, {"url": "Test.Runner.html#property__log", "access": "private", "host": "Test.Runner", "type": "property", "name": "_log"}, {"url": "Test.Runner.html#method__logEvent", "access": "private", "host": "Test.Runner", "type": "method", "name": "_logEvent"}, {"url": "Test.Mock.html#method_logInclude", "access": "", "host": "Test.Mock", "type": "method", "name": "logInclude"}, {"url": "Test.Runner.html#property_masterSuite", "access": "private", "host": "Test.Runner", "type": "property", "name": "masterSuite"}, {"url": "Test.Case.html#property_name", "access": "", "host": "Test.Case", "type": "property", "name": "name"}, {"url": "Test.Suite.html#property_name", "access": "", "host": "Test.Suite", "type": "property", "name": "name"}, {"url": "Assert.Error.html#property_name", "access": "", "host": "Assert.Error", "type": "property", "name": "name"}, {"url": "Assert.ComparisonFailure.html#property_name", "access": "", "host": "Assert.ComparisonFailure", "type": "property", "name": "name"}, {"url": "Assert.UnexpectedValue.html#property_name", "access": "", "host": "Assert.UnexpectedValue", "type": "property", "name": "name"}, {"url": "Assert.ShouldFail.html#property_name", "access": "", "host": "Assert.ShouldFail", "type": "property", "name": "name"}, {"url": "Assert.ShouldError.html#property_name", "access": "", "host": "Assert.ShouldError", "type": "property", "name": "name"}, {"url": "Assert.UnexpectedError.html#property_name", "access": "", "host": "Assert.UnexpectedError", "type": "property", "name": "name"}, {"url": "Test.TestNode.html#property_next", "access": "", "host": "Test.TestNode", "type": "property", "name": "next"}, {"url": "Test.Runner.html#method__next", "access": "private", "host": "Test.Runner", "type": "method", "name": "_next"}, {"url": "Test.Mock.html#property_oopTests", "access": "", "host": "Test.Mock", "type": "property", "name": "oopTests"}, {"url": "Assert.ObjectAssert.html#method_ownsKey", "access": "", "host": "Assert.ObjectAssert", "type": "method", "name": "ownsKey"}, {"url": "Assert.ObjectAssert.html#method_ownsKeys", "access": "", "host": "Assert.ObjectAssert", "type": "method", "name": "ownsKeys"}, {"url": "Assert.ObjectAssert.html#method_ownsNoKeys", "access": "", "host": "Assert.ObjectAssert", "type": "method", "name": "ownsNoKeys"}, {"url": "Test.TestNode.html#property_parent", "access": "", "host": "Test.TestNode", "type": "property", "name": "parent"}, {"url": "Test.Runner.html#event_pass", "access": "", "host": "Test.Runner", "type": "event", "name": "pass"}, {"url": "Test.Reporter.html#method_report", "access": "", "host": "Test.Reporter", "type": "method", "name": "report"}, {"url": "Test.Assert.html#method__reset", "access": "protected", "host": "Test.Assert", "type": "method", "name": "_reset"}, {"url": "Test.TestNode.html#property_results", "access": "", "host": "Test.TestNode", "type": "property", "name": "results"}, {"url": "Test.Case.html#method_resume", "access": "", "host": "Test.Case", "type": "method", "name": "resume"}, {"url": "Test.Runner.html#method_resume", "access": "", "host": "Test.Runner", "type": "method", "name": "resume"}, {"url": "Test.Runner.html#property__root", "access": "private", "host": "Test.Runner", "type": "property", "name": "_root"}, {"url": "Test.Runner.html#method__run", "access": "private", "host": "Test.Runner", "type": "method", "name": "_run"}, {"url": "Test.Runner.html#method_run", "access": "", "host": "Test.Runner", "type": "method", "name": "run"}, {"url": "Test.Runner.html#property__running", "access": "private", "host": "Test.Runner", "type": "property", "name": "_running"}, {"url": "Test.Runner.html#method__runTest", "access": "private", "host": "Test.Runner", "type": "method", "name": "_runTest"}, {"url": "Test.Wait.html#property_segment", "access": "", "host": "Test.Wait", "type": "property", "name": "segment"}, {"url": "Test.Runner.html#method_setName", "access": "", "host": "Test.Runner", "type": "method", "name": "setName"}, {"url": "Test.Case.html#method_setUp", "access": "", "host": "Test.Case", "type": "method", "name": "setUp"}, {"url": "Test.Suite.html#method_setUp", "access": "", "host": "Test.Suite", "type": "method", "name": "setUp"}, {"url": "Test.Case.html#property__should", "access": "", "host": "Test.Case", "type": "property", "name": "_should"}, {"url": "Assert.UnexpectedError.html#property_stack", "access": "", "host": "Assert.UnexpectedError", "type": "property", "name": "stack"}, {"url": "Assert.DateAssert.html#method_TAP", "access": "", "host": "Assert.DateAssert", "type": "method", "name": "TAP"}, {"url": "Test.Case.html#method_tearDown", "access": "", "host": "Test.Case", "type": "method", "name": "tearDown"}, {"url": "Test.Suite.html#method_tearDown", "access": "", "host": "Test.Suite", "type": "method", "name": "tearDown"}, {"url": "Test.Runner.html#event_testcasebegin", "access": "", "host": "Test.Runner", "type": "event", "name": "testcasebegin"}, {"url": "Test.Runner.html#event_testcasecomplete", "access": "", "host": "Test.Runner", "type": "event", "name": "testcasecomplete"}, {"url": "Test.TestNode.html#property_testObject", "access": "", "host": "Test.TestNode", "type": "property", "name": "testObject"}, {"url": "Test.Runner.html#event_testsuitebegin", "access": "", "host": "Test.Runner", "type": "event", "name": "testsuitebegin"}, {"url": "Test.Runner.html#event_testsuitecomplete", "access": "", "host": "Test.Runner", "type": "event", "name": "testsuitecomplete"}, {"url": "Assert.DateAssert.html#method_timesAreEqual", "access": "", "host": "Assert.DateAssert", "type": "method", "name": "timesAreEqual"}, {"url": "Assert.Error.html#method_toString", "access": "", "host": "Assert.Error", "type": "method", "name": "toString"}, {"url": "Assert.ComparisonFailure.html#method_toString", "access": "", "host": "Assert.ComparisonFailure", "type": "method", "name": "toString"}, {"url": "Assert.UnexpectedValue.html#property_unexpected", "access": "", "host": "Assert.UnexpectedValue", "type": "property", "name": "unexpected"}, {"url": "Test.Reporter.html#property_url", "access": "", "host": "Test.Reporter", "type": "property", "name": "url"}, {"url": "Test.Mock.html#property_utilTests", "access": "", "host": "Test.Mock", "type": "property", "name": "utilTests"}, {"url": "Assert.Error.html#method_valueOf", "access": "", "host": "Assert.Error", "type": "method", "name": "valueOf"}, {"url": "Test.Mock.html#method_verify", "access": "", "host": "Test.Mock", "type": "method", "name": "verify"}, {"url": "Test.Case.html#method_wait", "access": "", "host": "Test.Case", "type": "method", "name": "wait"}, {"url": "Test.Runner.html#property__waiting", "access": "private", "host": "Test.Runner", "type": "property", "name": "_waiting"}, {"url": "Assert.DateAssert.html#method_XdebugJSON", "access": "", "host": "Assert.DateAssert", "type": "method", "name": "XdebugJSON"}, {"url": "Assert.DateAssert.html#method_XML", "access": "", "host": "Assert.DateAssert", "type": "method", "name": "XML"}, {"url": "Test.Assert.html#method_Y.assert", "access": "", "host": "Test.Assert", "type": "method", "name": "Y.assert"}, {"url": "Test.Assert.html#method_Y.fail", "access": "", "host": "Test.Assert", "type": "method", "name": "Y.fail"}];
</script>
</body>
</html>
